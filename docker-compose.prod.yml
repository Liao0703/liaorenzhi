version: '3.8'

services:
  # 生产环境MySQL配置
  mysql:
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command: >
      --default-authentication-plugin=mysql_native_password
      --bind-address=0.0.0.0
      --max-connections=1000
      --innodb-buffer-pool-size=1G
      --innodb-log-file-size=256M
      --slow-query-log=1
      --long-query-time=2
      --general-log=0
    volumes:
      - /data/mysql:/var/lib/mysql
      - ./docker/mysql/conf.d:/etc/mysql/conf.d:ro
      - ./docker/mysql/logs:/var/log/mysql
    ports: []  # 不暴露端口到宿主机，仅内网访问

  # 生产环境Redis配置
  redis:
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --appendonly yes
      --appendfsync everysec
    volumes:
      - /data/redis:/data
      - ./docker/redis.prod.conf:/etc/redis/redis.conf:ro
    ports: []  # 不暴露端口到宿主机

  # 生产环境后端配置
  backend:
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      # 生产环境邮件配置
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      # 告警配置
      ALERT_WEBHOOK_URL: ${ALERT_WEBHOOK_URL}
      # Ali OSS配置
      OSS_REGION: ${OSS_REGION}
      OSS_ACCESS_KEY_ID: ${OSS_ACCESS_KEY_ID}
      OSS_ACCESS_KEY_SECRET: ${OSS_ACCESS_KEY_SECRET}
      OSS_BUCKET: ${OSS_BUCKET}
    volumes:
      - /data/uploads:/app/uploads
      - /data/logs:/app/logs
    ports: []  # 不暴露端口，通过Nginx代理
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # 生产环境前端配置
  frontend:
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./docker/nginx.prod.conf:/etc/nginx/nginx.conf:ro
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # 生产环境监控服务（可选）
  monitoring:
    image: prom/prometheus:latest
    container_name: learning-platform-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - app-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

volumes:
  prometheus_data:
    name: learning-platform-prometheus-data
